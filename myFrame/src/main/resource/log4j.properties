#参考网址：http://blog.csdn.net/anlina_1984/article/details/5313023

#DEBUG  <  INFO  <  WARN  <  ERROR  <  FATAL
#log4j.rootLogger=[level],appenderName,appenderName,......
log4j.rootLogger=INFO,stdout,fileout
#the directory to scan for logger
log4j.logger.com.lee=DEBUG

# set target appender for the infomation to ouput
# log4j.appender.appenderName = fully.qualified.name.of.appender.class

# 1) all the appnder:
#	   1.org.apache.log4j.ConsoleAppender( 控制台 )
#      2.org.apache.log4j.FileAppender( 文件 )
#      3.org.apache.log4j.DailyRollingFileAppender ( 每天产生一个 文件 )
#      4.org.apache.log4j.RollingFileAppender (文件大小达到指定尺寸的时候产生一个新的文件)
#      5.org.apache.log4j.WriterAppender ( 将日志消息以流格式发送到任意指定的地方 )

# 2) the layout of the infomation
#       1.org.apache.log4j.HTMLLayout ( html形式布局  )
#       2.org.apache.log4j.PatternLayout ( 可以灵活的指定布局模块 )
#       3.org.apache.log4j.SimpleLayout ( 包含入职信息的几倍和信息字符串  )
#       4.org.apache.log4j.TTCCLayout ( 包含日志信息产生的时间、线程、类型等信息 )

# 打印格式化的日志信息
# %m 输出代码中指定的消息
# %p 输出优先级，即DEBUG ， INFO ， WARN ， ERROR ， FATAL
# %r 输出自应用启动到输出该log信息高飞的毫秒数
# %c 输出所属的类目，通畅就是所在类的全名
# %t 输出产生该日志的线程名
# %n 输出一个换行符，windows平台为“rn”,linux平台为“n”
# %d 输出日志时间的日期或时间，默认格式为ISO8601,也可以在其后指定格式，比如： %d{yyy mmm dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22:10:18日22:：10:28,921
# %l 输出日志事件的发生位置，包括类目名，发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.conversionPattern=[%-d{yyyy-MM-dd HH:mm:ss}] [myFrame] [%p] [%c] %m%n

log4j.appender.fileout=org.apache.log4j.DailyRollingFileAppender
log4j.appender.fileout.layout=org.apache.log4j.PatternLayout
#save log to file 
#log4j.appender.fileout.File=${catalina.home}/logs/SSOModule/SSOModule.log
log4j.appender.fileout.DatePattern='_'yyyy-MM-dd
log4j.appender.fileout.layout.ConversionPattern=[%-d{yyyy-MM-dd HH:mm:ss}] [myFrame] [%p] [%c] %m%n

