<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.lee.way</groupId>
  <artifactId>myFrame</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>myFrame</name>
  
  <dependencies>
  	<!-- spring 必须的jar 
  		 spring-context Application context runtime, including scheduling and remoting abstractions
  		 spring-core    Core utilities, used by many other Spring modules				
  	-->
  	<dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-context</artifactId>
  		<version>4.0.5.RELEASE</version>
  	</dependency>
  	<dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-core</artifactId>
  		<version>4.0.5.RELEASE</version>
  	</dependency>
  	<!-- spring mvc 必须的jar -->
  	<dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-webmvc</artifactId>
  		<version>4.0.5.RELEASE</version>
  	</dependency>
  	<!-- 使用了spring-jdbc标签 -->
  	<dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-jdbc</artifactId>
    	<version>4.0.5.RELEASE</version>
	</dependency>
  	<!-- 依赖servlet ,导入servlet所需要的jar包    如果不导入，则jsp文件总是会提示错误-->
  	<dependency>
  		<groupId>javax.servlet</groupId>
  		<artifactId>javax.servlet-api</artifactId>
  		<version>3.0.1</version>
  	</dependency>
  	<!-- spring mvc view -->
	<dependency>
    	<groupId>javax.servlet</groupId>
    	<artifactId>jstl</artifactId>
   		 <version>1.2</version>
	</dependency>
	<!-- h2数据库驱动 -->
	<dependency>
    	<groupId>com.h2database</groupId>
    	<artifactId>h2</artifactId>
    	<version>1.3.176</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/junit/junit -->
	<!-- junit包 -->
	<dependency>
   		<groupId>junit</groupId>
    	<artifactId>junit</artifactId>
    	<version>4.11</version>
	</dependency>
	<!-- mybatis-spring插件，这样mybatis可以将Mapper（也就是DAO）自动配置成Bean -->
	<dependency>
   		<groupId>org.mybatis</groupId>
   		<artifactId>mybatis-spring</artifactId>
 		<version>1.3.0</version>
	</dependency>
	<!-- 用到mybatis中的session相关的包 -->
	<!-- nested exception is java.lang.NoClassDefFoundError:org/apache/ibatis/session/SqlSession -->
	<dependency>
    	<groupId>org.mybatis</groupId>
    	<artifactId>mybatis</artifactId>
    	<version>3.2.4</version>
	</dependency>
	<!-- 数据库连接池 -->
	<!-- nested exception is java.lang.ClassNotFoundException: org.apache.commons.dbcp.BasicDataSource -->
	<dependency>
    	<groupId>commons-dbcp</groupId>
    	<artifactId>commons-dbcp</artifactId>
    	<version>1.2.2</version>	
	</dependency>
	
  </dependencies>

<build>
    <plugins>
    	<!-- 设置maven项目编译是的jdk版本 -->
        <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
            <source>1.7</source>
            <target>1.7</target>
            <!-- 指定编码格式，否则在dos下运行mvn compile命令会出现莫名的错误，因为系统默认用GBK编码 -->
            <encoding>UTF-8</encoding>
        </configuration>
    </plugin>
    <plugin>
    	<groupId>org.apache.maven.plugins</groupId>
    	<artifactId>maven-resources-plugin</artifactId>
    	<version>2.6</version>
    	<configuration>
    		<!-- 指定编码格式，否则在dos下运行mvn命令时，当发生文件资源copy时将使用系统默认的GBK编码 -->
    		<encoding>UTF-8</encoding>
    	</configuration>
    </plugin>
    </plugins>
</build>

</project>
